// This script summarizes the CPU metrics from a JSON file generated by Chrome's tracing tool.
// It reads the CPU metrics from a file named 'cpu-metrics.json', computes the average of each metric 
// and writes the summary to a new file named 'browser-metrics.json'.

// Usage: node browser-metrics.js

const fs = require('fs');

function summarizeBrowserMetrics() {
  // Read cpu-metrics.json (make sure the path is correct)
  const cpuData = JSON.parse(fs.readFileSync('cpu-metrics.json', 'utf8'));
  const samples = cpuData.performanceSamples;
  
  // Initialize accumulator object
  const summary = {
    sampleCount: samples.length,
    ScriptDuration: 0,
    V8CompileDuration: 0,
    TaskDuration: 0,
    TaskOtherDuration: 0,
    ThreadTime: 0,
    ProcessTime: 0
  };

  // Sum each metric from all samples
  for (let sample of samples) {
    const m = sample.metrics;
    summary.ScriptDuration += m.ScriptDuration || 0;
    summary.V8CompileDuration += m.V8CompileDuration || 0;
    summary.TaskDuration += m.TaskDuration || 0;
    summary.TaskOtherDuration += m.TaskOtherDuration || 0;
    summary.ThreadTime += m.ThreadTime || 0;
    summary.ProcessTime += m.ProcessTime || 0;
  }
  
  // Compute averages
  if (samples.length > 0) {
    summary.ScriptDuration /= samples.length;
    summary.V8CompileDuration /= samples.length;
    summary.TaskDuration /= samples.length;
    summary.TaskOtherDuration /= samples.length;
    summary.ThreadTime /= samples.length;
    summary.ProcessTime /= samples.length;
  }
  
  // Write the summary to browser-metrics.json
  fs.writeFileSync('browser-metrics.json', JSON.stringify(summary, null, 2));
  console.log('Browser metrics summary saved to browser-metrics.json');
}

summarizeBrowserMetrics();
